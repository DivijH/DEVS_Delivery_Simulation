package Component.DeliverySimulation;

import java.awt.Dimension;
import java.awt.Point;

import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;

/**
 * Coupled model for the Delivery System Model
 * 
 * @author Divij and Arit
 */
public class CoupledDeliverySimulator extends ViewableDigraph {

	// Coupled Model Ports
	private static final String IN = "in";
	private static final String OUT = "out";
	
	// Warehouse Ports
	protected static final String WAREHOUSE_INPUT = "in";
	protected static final String WAREHOUSE_RED_INPUT = "r_in";
	protected static final String WAREHOUSE_GREEN_INPUT = "g_in";
	protected static final String WAREHOUSE_YELLOW_INPUT = "y_in";
	protected static final String WAREHOUSE_BLUE_INPUT = "b_in";
	protected static final String WAREHOUSE_OUTPUT = "out";
	protected static final String WAREHOUSE_RED_OUTPUT = "r_out";
	protected static final String WAREHOUSE_GREEN_OUTPUT = "g_out";
	protected static final String WAREHOUSE_YELLOW_OUTPUT = "y_out";
	protected static final String WAREHOUSE_BLUE_OUTPUT = "b_out";
	
	// Zone Ports
	public static final String ZONE_INPUT = "in";
	public static final String ZONE_OUTPUT = "out";
	public static final String ZONE_RED_INPUT = "r_in";
	public static final String ZONE_GREEN_INPUT = "g_in";
	public static final String ZONE_BLUE_INPUT = "b_in";
	public static final String ZONE_YELLOW_INPUT = "y_in";
	public static final String ZONE_WARE_INPUT = "w_in";
	public static final String ZONE_RED_OUTPUT = "r_out";
	public static final String ZONE_GREEN_OUTPUT = "g_out";
	public static final String ZONE_BLUE_OUTPUT = "b_out";
	public static final String ZONE_YELLOW_OUTPUT = "y_out";
	public static final String ZONE_WARE_OUTPUT = "w_out";
	
	/**
	 * Default Constructor for the model
	 */
	public CoupledDeliverySimulator() {
		super("Delivery Model");
		
		// Mapping : Red:1, Green:2, Blue:3, Yellow:4
		ViewableAtomic red = new Zone("Red",1,2);
		ViewableAtomic green = new Zone("Green",2,1);
		ViewableAtomic yellow = new Zone("Yellow",4,3);
		ViewableAtomic blue = new Zone("Blue",3,1);
		ViewableAtomic ware = new Warehouse();
		
		// Adding the models
		add(red);
		add(green);
		add(yellow);
		add(blue);
		add(ware);
		
		// Adding the ports to the model
		addInport(IN);
		addOutport(OUT);
		
		// Adding coupling from Warehouse to the Coupled model
		addCoupling(this, IN, ware, WAREHOUSE_INPUT);
		addCoupling(ware, OUT, this, OUT);
		
		// Adding coupling from Warehouse to other models
		addCoupling(ware, WAREHOUSE_RED_OUTPUT, red, ZONE_WARE_INPUT);
		addCoupling(ware, WAREHOUSE_GREEN_OUTPUT, green, ZONE_WARE_INPUT);
		addCoupling(ware, WAREHOUSE_BLUE_OUTPUT, blue, ZONE_WARE_INPUT);
		addCoupling(ware, WAREHOUSE_YELLOW_OUTPUT, yellow, ZONE_WARE_INPUT);
		addCoupling(ware, WAREHOUSE_OUTPUT, this, OUT);
		
		// Adding coupling from Red Zone to other models
		addCoupling(red, ZONE_BLUE_OUTPUT, blue, ZONE_RED_INPUT);
		addCoupling(red, ZONE_GREEN_OUTPUT, green, ZONE_RED_INPUT);
		addCoupling(red, ZONE_YELLOW_OUTPUT, yellow, ZONE_RED_INPUT);
		addCoupling(red, ZONE_WARE_OUTPUT, ware, ZONE_RED_INPUT);
		addCoupling(red, ZONE_OUTPUT, this, OUT);
		
		// Adding coupling from Green Zone to other models
		addCoupling(green, ZONE_BLUE_OUTPUT, blue, ZONE_GREEN_INPUT);
		addCoupling(green, ZONE_RED_OUTPUT, red, ZONE_GREEN_INPUT);
		addCoupling(green, ZONE_YELLOW_OUTPUT, yellow, ZONE_GREEN_INPUT);
		addCoupling(green, ZONE_WARE_OUTPUT, ware, ZONE_GREEN_INPUT);
		addCoupling(green, ZONE_OUTPUT, this, OUT);
		
		// Adding coupling from Blue Zone to other models
		addCoupling(blue, ZONE_RED_OUTPUT, red, ZONE_BLUE_INPUT);
		addCoupling(blue, ZONE_GREEN_OUTPUT, green, ZONE_BLUE_INPUT);
		addCoupling(blue, ZONE_YELLOW_OUTPUT, yellow, ZONE_BLUE_INPUT);
		addCoupling(blue, ZONE_WARE_OUTPUT, ware, ZONE_BLUE_INPUT);
		addCoupling(blue, ZONE_OUTPUT, this, OUT);
		
		// Adding coupling from Yellow Zone to other models
		addCoupling(yellow, ZONE_BLUE_OUTPUT, blue, ZONE_YELLOW_INPUT);
		addCoupling(yellow, ZONE_GREEN_OUTPUT, green, ZONE_YELLOW_INPUT);
		addCoupling(yellow, ZONE_RED_OUTPUT, red, ZONE_YELLOW_INPUT);
		addCoupling(yellow, ZONE_WARE_OUTPUT, ware, ZONE_YELLOW_INPUT);
		addCoupling(yellow, ZONE_OUTPUT, this, OUT);
	}
	
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    @Override
    public void layoutForSimView() {
        preferredSize = new Dimension(694, 359);
        ((ViewableComponent)withName("Red")).setPreferredLocation(new Point(204, 23));
        ((ViewableComponent)withName("Warehouse")).setPreferredLocation(new Point(206, 138));
        ((ViewableComponent)withName("Yellow")).setPreferredLocation(new Point(11, 131));
        ((ViewableComponent)withName("Blue")).setPreferredLocation(new Point(206, 242));
        ((ViewableComponent)withName("Green")).setPreferredLocation(new Point(410, 132));
    }
}
